syntax = "proto3";
package usercenter;

import "google/api/annotations.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

import "runtime/extensions.proto";


option (gogoproto.marshaler_all) = false;
option (gogoproto.sizer_all) = false;
option (gogoproto.unmarshaler_all) = false;


service User {
    rpc Login(LoginRequest) returns (LoginReply) {
        option (runtime.authentication) = false;
        option (google.api.http) = {
            post: "/login"
            body: "*"
        };
    }

    rpc Logout(google.protobuf.Empty) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/logout"
            body: "*"
        };
    }

    rpc GetbackPassword(GetbackPasswordRequest) returns (google.protobuf.Empty) {
        option (runtime.authentication) = false;
        option (google.api.http) = {
            get: "/getbackPassword"
            body: "*"
        };
    }

    rpc ResetPassword(ResetPasswordRequest) returns (google.protobuf.Empty) {
        option (runtime.authentication) = false;
        option (google.api.http) = {
            post: "/resetPassword"
            body: "*"
        };
    }
    
    rpc List(ListUserRequest) returns (ListUserReply) {
        option (google.api.http) = {
            get: "/customers/{customerId}/users"
            body: "*"
        };
    }

    rpc Post(UserModel) returns (UserModel) {
        option (google.api.http) = {
            post: "/customers/{customerId}/users"
            body: "*"
        };
    }

    rpc Get(GetUserRequest) returns (UserModel) {
        option (google.api.http) = {
            get: "/customers/{customerId}/users/{userIdOrName}"
            body: "*"
        };
    }

    rpc Put(UserModel) returns (UserModel) {
        option (google.api.http) = {
            put: "/customers/{customerId}/users/{userId}"
            body: "*"
        };
    }

    rpc Delete(UserModel) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/customers/{customerId}/users/{userId}"
            body: "*"
        };
    }

    rpc My(google.protobuf.Empty) returns (UserModel) {
        option (google.api.http) = {
            get: "/my"
            body: "*"
        };
    }

    rpc ChangePassword(ChangePasswordRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/customers/{customerId}/users/{userId}/changePassword"
            body: "*"
        };
    }

    rpc ChangeMyPassword(ChangeMyPasswordRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/my/changePassword"
            body: "*"
        };
    }
}

message LoginRequest {
    string email = 1;
    string password = 2;
}

message LoginReply {
    string clientToken = 1;
    uint32 expiresIn = 2;
}

message UserModel {
    string userId = 1;
    int64 customerId = 2;
    google.protobuf.Timestamp createdDate = 3;
    string userName = 4;
    string email = 5;
    google.protobuf.Timestamp modifiedDate = 6;
    google.protobuf.Timestamp lastPasswordChangeDate = 7;
    google.protobuf.Timestamp lastLoginDate = 8;
    string lastLoginIPAddress = 9  [(gogoproto.nullable) = true, (gogoproto.customtype) = "string"];
    string alias = 10;
    string mobile = 11;
    int32 status = 12;
    string password = 13;
}

message ListUserRequest {
    int64 customerId = 1;
}

message ListUserReply {
    repeated UserModel data = 1;
}

message GetUserRequest {
    int64 customerId = 1;
    string userIdOrName = 2;
}

message ChangePasswordRequest {
    string userId = 1;
    int64 customerId = 2;
    string currentPassword = 3;
    string newPassword = 4;
}

message ChangeMyPasswordRequest {
    string currentPassword = 1;
    string newPassword = 2;
}

message GetbackPasswordRequest {
    string email = 1;
}

message ResetPasswordRequest {
    string email = 1;
    string resetCode = 2;
    string password = 3;
}
