// Code generated by protoc-gen-go.
// source: service/user.proto
// DO NOT EDIT!

package lovev

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import _ "github.com/golang/protobuf/ptypes/empty"
import google_protobuf2 "github.com/golang/protobuf/ptypes/timestamp"
import _ "runtime"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type LoginRequest struct {
	Email    string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *LoginRequest) Reset()                    { *m = LoginRequest{} }
func (m *LoginRequest) String() string            { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()               {}
func (*LoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *LoginRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *LoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type LoginReply struct {
	ClientToken string `protobuf:"bytes,1,opt,name=clientToken" json:"clientToken,omitempty"`
	ExpiresIn   uint32 `protobuf:"varint,2,opt,name=expiresIn" json:"expiresIn,omitempty"`
}

func (m *LoginReply) Reset()                    { *m = LoginReply{} }
func (m *LoginReply) String() string            { return proto.CompactTextString(m) }
func (*LoginReply) ProtoMessage()               {}
func (*LoginReply) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *LoginReply) GetClientToken() string {
	if m != nil {
		return m.ClientToken
	}
	return ""
}

func (m *LoginReply) GetExpiresIn() uint32 {
	if m != nil {
		return m.ExpiresIn
	}
	return 0
}

type UserModel struct {
	UserId                 string                      `protobuf:"bytes,1,opt,name=userId" json:"userId,omitempty"`
	CustomerId             int64                       `protobuf:"varint,2,opt,name=customerId" json:"customerId,omitempty"`
	CreatedDate            *google_protobuf2.Timestamp `protobuf:"bytes,3,opt,name=createdDate" json:"createdDate,omitempty"`
	UserName               string                      `protobuf:"bytes,4,opt,name=userName" json:"userName,omitempty"`
	Email                  string                      `protobuf:"bytes,5,opt,name=email" json:"email,omitempty"`
	ModifiedDate           *google_protobuf2.Timestamp `protobuf:"bytes,6,opt,name=modifiedDate" json:"modifiedDate,omitempty"`
	LastPasswordChangeDate *google_protobuf2.Timestamp `protobuf:"bytes,7,opt,name=lastPasswordChangeDate" json:"lastPasswordChangeDate,omitempty"`
	LastLoginDate          *google_protobuf2.Timestamp `protobuf:"bytes,8,opt,name=lastLoginDate" json:"lastLoginDate,omitempty"`
	LastLoginIPAddress     string                      `protobuf:"bytes,9,opt,name=lastLoginIPAddress" json:"lastLoginIPAddress,omitempty"`
	Alias                  string                      `protobuf:"bytes,10,opt,name=alias" json:"alias,omitempty"`
	Mobile                 string                      `protobuf:"bytes,11,opt,name=mobile" json:"mobile,omitempty"`
	Status                 int32                       `protobuf:"varint,12,opt,name=status" json:"status,omitempty"`
	Password               string                      `protobuf:"bytes,13,opt,name=password" json:"password,omitempty"`
}

func (m *UserModel) Reset()                    { *m = UserModel{} }
func (m *UserModel) String() string            { return proto.CompactTextString(m) }
func (*UserModel) ProtoMessage()               {}
func (*UserModel) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *UserModel) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UserModel) GetCustomerId() int64 {
	if m != nil {
		return m.CustomerId
	}
	return 0
}

func (m *UserModel) GetCreatedDate() *google_protobuf2.Timestamp {
	if m != nil {
		return m.CreatedDate
	}
	return nil
}

func (m *UserModel) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *UserModel) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserModel) GetModifiedDate() *google_protobuf2.Timestamp {
	if m != nil {
		return m.ModifiedDate
	}
	return nil
}

func (m *UserModel) GetLastPasswordChangeDate() *google_protobuf2.Timestamp {
	if m != nil {
		return m.LastPasswordChangeDate
	}
	return nil
}

func (m *UserModel) GetLastLoginDate() *google_protobuf2.Timestamp {
	if m != nil {
		return m.LastLoginDate
	}
	return nil
}

func (m *UserModel) GetLastLoginIPAddress() string {
	if m != nil {
		return m.LastLoginIPAddress
	}
	return ""
}

func (m *UserModel) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *UserModel) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *UserModel) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *UserModel) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type ListUserRequest struct {
	CustomerId int64 `protobuf:"varint,1,opt,name=customerId" json:"customerId,omitempty"`
}

func (m *ListUserRequest) Reset()                    { *m = ListUserRequest{} }
func (m *ListUserRequest) String() string            { return proto.CompactTextString(m) }
func (*ListUserRequest) ProtoMessage()               {}
func (*ListUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *ListUserRequest) GetCustomerId() int64 {
	if m != nil {
		return m.CustomerId
	}
	return 0
}

type ListUserReply struct {
	Data []*UserModel `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
}

func (m *ListUserReply) Reset()                    { *m = ListUserReply{} }
func (m *ListUserReply) String() string            { return proto.CompactTextString(m) }
func (*ListUserReply) ProtoMessage()               {}
func (*ListUserReply) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *ListUserReply) GetData() []*UserModel {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetUserRequest struct {
	CustomerId   int64  `protobuf:"varint,1,opt,name=customerId" json:"customerId,omitempty"`
	UserIdOrName string `protobuf:"bytes,2,opt,name=userIdOrName" json:"userIdOrName,omitempty"`
}

func (m *GetUserRequest) Reset()                    { *m = GetUserRequest{} }
func (m *GetUserRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUserRequest) ProtoMessage()               {}
func (*GetUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *GetUserRequest) GetCustomerId() int64 {
	if m != nil {
		return m.CustomerId
	}
	return 0
}

func (m *GetUserRequest) GetUserIdOrName() string {
	if m != nil {
		return m.UserIdOrName
	}
	return ""
}

type ChangePasswordRequest struct {
	UserId          string `protobuf:"bytes,1,opt,name=userId" json:"userId,omitempty"`
	CustomerId      int64  `protobuf:"varint,2,opt,name=customerId" json:"customerId,omitempty"`
	CurrentPassword string `protobuf:"bytes,3,opt,name=currentPassword" json:"currentPassword,omitempty"`
	NewPassword     string `protobuf:"bytes,4,opt,name=newPassword" json:"newPassword,omitempty"`
}

func (m *ChangePasswordRequest) Reset()                    { *m = ChangePasswordRequest{} }
func (m *ChangePasswordRequest) String() string            { return proto.CompactTextString(m) }
func (*ChangePasswordRequest) ProtoMessage()               {}
func (*ChangePasswordRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *ChangePasswordRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *ChangePasswordRequest) GetCustomerId() int64 {
	if m != nil {
		return m.CustomerId
	}
	return 0
}

func (m *ChangePasswordRequest) GetCurrentPassword() string {
	if m != nil {
		return m.CurrentPassword
	}
	return ""
}

func (m *ChangePasswordRequest) GetNewPassword() string {
	if m != nil {
		return m.NewPassword
	}
	return ""
}

type ChangeMyPasswordRequest struct {
	CurrentPassword string `protobuf:"bytes,1,opt,name=currentPassword" json:"currentPassword,omitempty"`
	NewPassword     string `protobuf:"bytes,2,opt,name=newPassword" json:"newPassword,omitempty"`
}

func (m *ChangeMyPasswordRequest) Reset()                    { *m = ChangeMyPasswordRequest{} }
func (m *ChangeMyPasswordRequest) String() string            { return proto.CompactTextString(m) }
func (*ChangeMyPasswordRequest) ProtoMessage()               {}
func (*ChangeMyPasswordRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *ChangeMyPasswordRequest) GetCurrentPassword() string {
	if m != nil {
		return m.CurrentPassword
	}
	return ""
}

func (m *ChangeMyPasswordRequest) GetNewPassword() string {
	if m != nil {
		return m.NewPassword
	}
	return ""
}

type GetbackPasswordRequest struct {
	Email string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
}

func (m *GetbackPasswordRequest) Reset()                    { *m = GetbackPasswordRequest{} }
func (m *GetbackPasswordRequest) String() string            { return proto.CompactTextString(m) }
func (*GetbackPasswordRequest) ProtoMessage()               {}
func (*GetbackPasswordRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *GetbackPasswordRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type ResetPasswordRequest struct {
	Email     string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
	ResetCode string `protobuf:"bytes,2,opt,name=resetCode" json:"resetCode,omitempty"`
	Password  string `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
}

func (m *ResetPasswordRequest) Reset()                    { *m = ResetPasswordRequest{} }
func (m *ResetPasswordRequest) String() string            { return proto.CompactTextString(m) }
func (*ResetPasswordRequest) ProtoMessage()               {}
func (*ResetPasswordRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *ResetPasswordRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *ResetPasswordRequest) GetResetCode() string {
	if m != nil {
		return m.ResetCode
	}
	return ""
}

func (m *ResetPasswordRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func init() {
	proto.RegisterType((*LoginRequest)(nil), "lovev.LoginRequest")
	proto.RegisterType((*LoginReply)(nil), "lovev.LoginReply")
	proto.RegisterType((*UserModel)(nil), "lovev.UserModel")
	proto.RegisterType((*ListUserRequest)(nil), "lovev.ListUserRequest")
	proto.RegisterType((*ListUserReply)(nil), "lovev.ListUserReply")
	proto.RegisterType((*GetUserRequest)(nil), "lovev.GetUserRequest")
	proto.RegisterType((*ChangePasswordRequest)(nil), "lovev.ChangePasswordRequest")
	proto.RegisterType((*ChangeMyPasswordRequest)(nil), "lovev.ChangeMyPasswordRequest")
	proto.RegisterType((*GetbackPasswordRequest)(nil), "lovev.GetbackPasswordRequest")
	proto.RegisterType((*ResetPasswordRequest)(nil), "lovev.ResetPasswordRequest")
}

func init() { proto.RegisterFile("service/user.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 970 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x55, 0x4f, 0x6f, 0xe3, 0x54,
	0x10, 0xaf, 0x9b, 0x3f, 0xdb, 0x4c, 0xfe, 0xb4, 0xbc, 0x6d, 0x53, 0x2b, 0xdb, 0xa6, 0xe1, 0x09,
	0xa1, 0xa8, 0x40, 0xac, 0x16, 0xad, 0x90, 0x2a, 0x54, 0x95, 0xdd, 0x45, 0xa5, 0x52, 0x0a, 0x95,
	0x55, 0x6e, 0x08, 0xc9, 0x49, 0xa6, 0x5e, 0xab, 0xb6, 0x5f, 0xf0, 0x7b, 0xee, 0x6e, 0xb4, 0xda,
	0x0b, 0x27, 0x0e, 0xdc, 0x38, 0x72, 0xe1, 0xce, 0x07, 0xe0, 0x2b, 0x2c, 0x9c, 0x90, 0xb8, 0x71,
	0x58, 0xa1, 0x8a, 0x0f, 0x82, 0xde, 0xb3, 0x9d, 0xc4, 0x71, 0x42, 0xb3, 0x7b, 0xcb, 0xcc, 0x9b,
	0xf9, 0xfd, 0xc6, 0x33, 0xbf, 0x99, 0x00, 0xe1, 0x18, 0xdc, 0x38, 0x7d, 0x34, 0x42, 0x8e, 0x41,
	0x67, 0x18, 0x30, 0xc1, 0x48, 0xc1, 0x65, 0x37, 0x78, 0xd3, 0xd8, 0xb1, 0x19, 0xb3, 0x5d, 0x34,
	0xac, 0xa1, 0x63, 0x58, 0xbe, 0xcf, 0x84, 0x25, 0x1c, 0xe6, 0xf3, 0x28, 0xa8, 0xf1, 0x91, 0xed,
	0x88, 0xa7, 0x61, 0xaf, 0xd3, 0x67, 0x9e, 0x61, 0x33, 0x9b, 0x19, 0xca, 0xdd, 0x0b, 0xaf, 0x94,
	0xa5, 0x0c, 0xf5, 0x2b, 0x0e, 0x7f, 0x10, 0x83, 0x8d, 0xa3, 0xd0, 0x1b, 0x8a, 0x51, 0xfc, 0xb8,
	0x37, 0xfb, 0x28, 0x1c, 0x0f, 0xb9, 0xb0, 0xbc, 0x61, 0x1c, 0xa0, 0x07, 0xa1, 0x2f, 0x7d, 0x06,
	0x3e, 0x17, 0xe8, 0xf3, 0x49, 0x19, 0xf4, 0x04, 0x2a, 0x5d, 0x66, 0x3b, 0xbe, 0x89, 0xdf, 0x85,
	0xc8, 0x05, 0xd9, 0x84, 0x02, 0x7a, 0x96, 0xe3, 0xea, 0x5a, 0x4b, 0x6b, 0x97, 0xcc, 0xc8, 0x20,
	0x0d, 0x58, 0x1b, 0x5a, 0x9c, 0x3f, 0x63, 0xc1, 0x40, 0x5f, 0x55, 0x0f, 0x63, 0x9b, 0x76, 0x01,
	0x62, 0x84, 0xa1, 0x3b, 0x22, 0x2d, 0x28, 0xf7, 0x5d, 0x07, 0x7d, 0x71, 0xc9, 0xae, 0xd1, 0x8f,
	0x51, 0xa6, 0x5d, 0x64, 0x07, 0x4a, 0xf8, 0x7c, 0xe8, 0x04, 0xc8, 0xcf, 0x7c, 0x05, 0x56, 0x35,
	0x27, 0x0e, 0xfa, 0x6b, 0x1e, 0x4a, 0x5f, 0x73, 0x0c, 0xce, 0xd9, 0x00, 0x5d, 0x52, 0x87, 0xa2,
	0xec, 0xeb, 0xd9, 0x20, 0x06, 0x8a, 0x2d, 0xd2, 0x04, 0xe8, 0x87, 0x5c, 0x30, 0x4f, 0xbd, 0x49,
	0x90, 0x9c, 0x39, 0xe5, 0x21, 0x9f, 0x42, 0xb9, 0x1f, 0xa0, 0x25, 0x70, 0xf0, 0xc4, 0x12, 0xa8,
	0xe7, 0x5a, 0x5a, 0xbb, 0x7c, 0xd8, 0xe8, 0x44, 0x6d, 0xea, 0x24, 0x6d, 0xea, 0x5c, 0x26, 0x6d,
	0x32, 0xa7, 0xc3, 0xe5, 0xd7, 0x4a, 0x9e, 0x2f, 0x2d, 0x0f, 0xf5, 0x7c, 0xf4, 0xb5, 0x89, 0x3d,
	0xe9, 0x4f, 0x61, 0xba, 0x3f, 0xc7, 0x50, 0xf1, 0xd8, 0xc0, 0xb9, 0x72, 0x62, 0xc2, 0xe2, 0x9d,
	0x84, 0xa9, 0x78, 0x62, 0x42, 0xdd, 0xb5, 0xb8, 0xb8, 0x88, 0x7b, 0xfa, 0xf8, 0xa9, 0xe5, 0xdb,
	0xa8, 0x90, 0xee, 0xdd, 0x89, 0xb4, 0x20, 0x93, 0x9c, 0x40, 0x55, 0xbe, 0xa8, 0xd9, 0x28, 0xa8,
	0xb5, 0x3b, 0xa1, 0xd2, 0x09, 0xe4, 0x18, 0xc8, 0xd8, 0x71, 0x76, 0xf1, 0xd9, 0x60, 0x10, 0x20,
	0xe7, 0x7a, 0x49, 0x7e, 0xf8, 0xa3, 0xda, 0xab, 0xd7, 0x7b, 0xda, 0xdf, 0xaf, 0xf7, 0x8a, 0x5c,
	0x04, 0x8e, 0x6f, 0x9b, 0x73, 0x22, 0x65, 0xaf, 0x2c, 0xd7, 0xb1, 0xb8, 0x0e, 0x51, 0xaf, 0x94,
	0x21, 0x67, 0xea, 0xb1, 0x9e, 0xe3, 0xa2, 0x5e, 0x8e, 0x66, 0x1a, 0x59, 0xd2, 0xcf, 0x85, 0x25,
	0x42, 0xae, 0x57, 0x5a, 0x5a, 0xbb, 0x60, 0xc6, 0x56, 0x4a, 0x7b, 0xd5, 0x19, 0xed, 0x1d, 0xc0,
	0x7a, 0xd7, 0xe1, 0x42, 0x0a, 0x26, 0x11, 0x70, 0x5a, 0x1a, 0xda, 0xac, 0x34, 0xe8, 0x43, 0xa8,
	0x4e, 0x52, 0xa4, 0x62, 0xdf, 0x83, 0xfc, 0xc0, 0x12, 0x96, 0xae, 0xb5, 0x72, 0xed, 0xf2, 0xe1,
	0x46, 0x47, 0x2d, 0x6f, 0x67, 0xac, 0x41, 0x53, 0xbd, 0xd2, 0x4b, 0xa8, 0x9d, 0xe2, 0x9b, 0x10,
	0x11, 0x0a, 0x95, 0x48, 0xad, 0x5f, 0x45, 0x4a, 0x8a, 0xf6, 0x26, 0xe5, 0xa3, 0x3f, 0x6b, 0xb0,
	0x15, 0x8d, 0x2c, 0x19, 0x60, 0x82, 0xfe, 0xb6, 0xca, 0x6f, 0xc3, 0x7a, 0x3f, 0x0c, 0x02, 0xf4,
	0xc7, 0x92, 0x50, 0xea, 0x2f, 0x99, 0xb3, 0x6e, 0xb9, 0xa9, 0x3e, 0x3e, 0x1b, 0x47, 0x45, 0x42,
	0x9f, 0x76, 0x51, 0x84, 0xed, 0xa8, 0xb8, 0xf3, 0xd1, 0x6c, 0x79, 0x73, 0x68, 0xb4, 0xa5, 0x68,
	0x56, 0xb3, 0x34, 0x1d, 0xa8, 0x9f, 0xa2, 0xe8, 0x59, 0xfd, 0xeb, 0x59, 0x96, 0xb9, 0xc7, 0x88,
	0x5e, 0xc1, 0xa6, 0x89, 0x1c, 0xc5, 0x52, 0xd1, 0xf2, 0xdc, 0x04, 0x32, 0xfa, 0x31, 0x1b, 0x24,
	0x33, 0x98, 0x38, 0x52, 0xe2, 0xca, 0xa5, 0xc5, 0x75, 0xf8, 0x63, 0x09, 0xf2, 0x72, 0xe0, 0xe4,
	0x0b, 0x28, 0x28, 0x65, 0x93, 0xfb, 0xb1, 0x38, 0xa6, 0x2f, 0x66, 0xe3, 0x9d, 0xb4, 0x73, 0xe8,
	0x8e, 0xe8, 0xf6, 0xf7, 0x7f, 0xfd, 0xfb, 0xd3, 0x6a, 0x99, 0x16, 0x0d, 0x57, 0x3a, 0x8f, 0xb4,
	0xfd, 0x5f, 0x7e, 0xff, 0xed, 0x8f, 0xd5, 0x15, 0xd2, 0x85, 0x62, 0x97, 0xd9, 0x2c, 0x14, 0xa4,
	0x9e, 0x59, 0xc3, 0xcf, 0xe5, 0x41, 0x6f, 0x2c, 0xf0, 0x53, 0xa2, 0x20, 0x2b, 0xf4, 0x9e, 0x84,
	0x64, 0xa1, 0x38, 0xd2, 0xf6, 0xc9, 0x35, 0xac, 0xcf, 0x34, 0x8e, 0xec, 0xc6, 0xc5, 0xcc, 0x6f,
	0xe8, 0x42, 0xf4, 0x77, 0x15, 0xfa, 0x16, 0xd9, 0x30, 0xec, 0x74, 0xe2, 0xa4, 0x74, 0x84, 0x6a,
	0xaa, 0xeb, 0xe4, 0x41, 0x4c, 0x35, 0x6f, 0x16, 0x0b, 0x89, 0xf6, 0x14, 0xd1, 0x7d, 0x5a, 0x33,
	0x82, 0xe9, 0xb4, 0x09, 0xcd, 0xb7, 0x90, 0x97, 0xeb, 0x49, 0xea, 0x49, 0x57, 0xd3, 0xeb, 0xdd,
	0xd8, 0xcc, 0xf8, 0x65, 0xc3, 0xdb, 0x0a, 0x96, 0x92, 0x5d, 0x23, 0x59, 0x05, 0x6e, 0xbc, 0x98,
	0x6c, 0xc5, 0x4b, 0xf5, 0xef, 0xcc, 0x65, 0xcf, 0x2e, 0x21, 0x7f, 0xc1, 0xb8, 0x20, 0x99, 0x3d,
	0x6f, 0x64, 0x3c, 0x09, 0x2a, 0xbd, 0x1b, 0xd5, 0x86, 0xdc, 0x29, 0x0a, 0xb2, 0x35, 0xe9, 0xfe,
	0x74, 0xcd, 0x59, 0xe4, 0x4f, 0x14, 0xf2, 0x01, 0xf9, 0xf0, 0x7f, 0x91, 0x8d, 0x17, 0xd3, 0xc7,
	0xe2, 0xa5, 0x24, 0xfa, 0x06, 0x72, 0x17, 0xe1, 0x72, 0xd5, 0x1f, 0x28, 0x8e, 0x0f, 0x1a, 0xef,
	0x2f, 0xc5, 0xa1, 0xd0, 0x11, 0x8a, 0x4f, 0xd0, 0x45, 0x81, 0x73, 0x08, 0x16, 0x4d, 0x34, 0xa6,
	0xd9, 0x7f, 0x03, 0x9a, 0x63, 0x58, 0x3d, 0x1f, 0x2d, 0xdc, 0x80, 0xec, 0x97, 0xd4, 0x14, 0xc5,
	0x1a, 0xc9, 0x19, 0xde, 0x48, 0xe6, 0xff, 0xa0, 0x41, 0x2d, 0x7d, 0x35, 0xc9, 0x4e, 0x9c, 0x34,
	0xf7, 0x98, 0x2e, 0xac, 0xfd, 0x44, 0x01, 0x1f, 0xd1, 0x87, 0xcb, 0xd5, 0x6e, 0xf4, 0x53, 0xe8,
	0xb2, 0x14, 0x07, 0x36, 0x66, 0x4f, 0x24, 0x69, 0xa6, 0x6a, 0xc9, 0xdc, 0xce, 0x85, 0xd5, 0xec,
	0xaa, 0x6a, 0xb6, 0x29, 0x31, 0xbc, 0x51, 0x96, 0xea, 0x51, 0xe5, 0xd5, 0x6d, 0x73, 0xe5, 0xcf,
	0xdb, 0xe6, 0xca, 0x3f, 0xb7, 0xcd, 0x95, 0x5e, 0x51, 0x25, 0x7f, 0xfc, 0x5f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x25, 0x18, 0xa7, 0x1a, 0x80, 0x0a, 0x00, 0x00,
}
